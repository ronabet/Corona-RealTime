{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dialog/dialog.component.ts","webpack:///src/app/dialog/dialog.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/info/info.component.ts","webpack:///src/app/info/info.component.html","webpack:///src/app/qa/qa.component.ts","webpack:///src/app/qa/qa.component.html","webpack:///src/app/search-bar/search-bar.component.ts","webpack:///src/app/search-bar/search-bar.component.html","webpack:///src/app/symp/symp.component.ts","webpack:///src/app/symp/symp.component.html","webpack:///src/environments/config.dev.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","http","params1","set","headersOptios","options","params","headers","get","GET_ALL_COUNTRIE_STAT_URL","GET_ALL_COUNTRIES_API_URL2","GET_ISRAEL","GET_WORLD_STAT","providedIn","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","entryComponents","DialogComponent","dialogRef","data","console","log","name","total_cases","close","onNoClick","HeaderComponent","router","route","innerWidth","window","navigateByUrl","relativeTo","location","reload","onHome","onInfo","onSymp","onQA","HomeComponent","api","dialog","ILStatsArray","ResStat","AllCountriesArray","StatsToDisplay","searchText","open","getWorldStat","getIsrael","searchTextChanged","getAllCountries","getAllCountriesSecondery","subscribe","res","resCountries","countries_stat","forEach","element","push","country_name","toUpperCase","cases","total_recovered","deaths","new_cases","new_deaths","serious_critical","getIsraelStat","latestStatIL","latest_stat_by_country","total_deaths","WorldStatResObject","width","height","panelClass","afterClosed","result","animal","text","stripWhiteSpaces","addTasksToDisplay","countriesStats","includes","str","replace","InfoComponent","FactsArray","FactsData","description","QaComponent","panelOpenState","questions","QuestionsData","SearchBarComponent","textChanged","serachText","event","target","value","emit","onChange","SympComponent","config","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA4BaC,U;AAEX,0BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAGpB,aAAAC,OAAA,GAAU,IAAI,+DAAJ,GACTC,GADS,CACL,SADK,EACM,QADN,CAAV;AAGA,aAAAC,aAAA,GAAgB,IAAI,gEAAJ,GACfD,GADe,CACX,gBADW,EACO,oDADP,CAAhB;AAGA,aAAAE,OAAA,GAAU;AAAEC,gBAAM,EAAE,KAAKJ,OAAf;AAAwBK,iBAAO,EAAE,KAAKH;AAAtC,SAAV;AATyC;;;;8CAWtB;AACjB,iBAAO,KAAKH,IAAL,CAAUO,GAAV,CAAc,gEAAOC,yBAArB,CAAP;AACD;;;mDAEuB;AACtB,iBAAO,KAAKR,IAAL,CAAUO,GAAV,CAAc,gEAAOE,0BAArB,EAAiD;AAAEH,mBAAO,EAAE,KAAKH;AAAhB,WAAjD,CAAP;AACD;;;wCAEY;AACX,iBAAO,KAAKH,IAAL,CAAUO,GAAV,CAAc,gEAAOG,UAArB,EAAiC,KAAKN,OAAtC,CAAP;AACD;;;uCAEW;AACV,iBAAO,KAAKJ,IAAL,CAAUO,GAAV,CAAc,gEAAOI,cAArB,EAAqC;AAAEL,mBAAO,EAAE,KAAKH;AAAhB,WAArC,CAAP;AACD;;;;;;;uBA3BUJ,U,EAAU,uH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAJT;;;;;sEAIDA,U,EAAU;cALtB,wDAKsB;eALX;AACVa,oBAAU,EAAE;AADF,S;AAKW,Q;;;;;;;;;;;;;;;;;;;;;;AC5BvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,QAAMC,MAAM,GAAW,CACrB;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KADqB,EAErB;AAAED,UAAI,EAAE,aAAR;AAAuBC,eAAS,EAAE;AAAlC,KAFqB,EAGrB;AAAED,UAAI,EAAE,UAAR;AAAoBC,eAAS,EAAE;AAA/B,KAHqB,EAIrB;AAAED,UAAI,EAAE,iBAAR;AAA2BC,eAAS,EAAE;AAAtC,KAJqB,EAKrB;AAAED,UAAI,EAAE,IAAR;AAAcC,eAAS,EAAE;AAAzB,KALqB,CAAvB;;QAYaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBJ,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBG,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBJ,MAArB,CAAD,CADD;AAERhB,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACpB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOasB,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,QAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;AAEA;;;;;;;;;sEDKaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,oC,CAiBA;;;QA2BaC,S;;;;;YAAAA,S;AAAS,kBAHR,2DAGQ;;;;yBAATA,S;AAAS,O;AAAA,iBAJT,E;AAAE,gBAVJ,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0EAJO,EAKP,yEALO,EAMP,yEANO,EAOP,+EAPO,EAQP,4FARO,CAUI;;;;0HAIFA,S,EAAS;AAAA,uBAvBlB,2DAuBkB,EAtBlB,wEAsBkB,EArBlB,kEAqBkB,EApBlB,mFAoBkB,EAnBlB,mEAmBkB,EAlBlB,mEAkBkB,EAjBlB,yEAiBkB,EAhBlB,6DAgBkB;AAhBP,kBAGX,uEAHW,EAIX,oEAJW,EAKX,qEALW,EAMX,0EANW,EAOX,yEAPW,EAQX,yEARW,EASX,+EATW,EAUX,4FAVW;AAgBO,O;AANK,K;;;;;sEAMdA,S,EAAS;cAzBrB,sDAyBqB;eAzBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,wEAFY,EAGZ,kEAHY,EAIZ,mFAJY,EAKZ,mEALY,EAMZ,mEANY,EAOZ,yEAPY,EAQZ,6DARY,CADN;AAWRP,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0EAJO,EAKP,yEALO,EAMP,yEANO,EAOP,+EAPO,EAQP,4FARO,CAXD;AAqBRQ,mBAAS,EAAE,EArBH;AAsBRC,mBAAS,EAAE,CAAC,2DAAD,CAtBH;AAuBRC,yBAAe,EAAE,CAAE,yEAAF;AAvBT,S;AAyBY,Q;;;;;;;;;;;;;;;;;;AC5CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,e;AAIX,+BACSC,SADT,EAEkCC,IAFlC,EAE6C;AAAA;;AADpC,aAAAD,SAAA,GAAAA,SAAA;AACyB,aAAAC,IAAA,GAAAA,IAAA;AAAa;;;;mCAGvC;AACNC,iBAAO,CAACC,GAAR,CAAY,KAAKF,IAAL,CAAUG,IAAtB;AACA,eAAKC,WAAL,GAAmB,KAAKJ,IAAL,CAAUG,IAA7B;AAED;;;oCAEQ;AACP,eAAKJ,SAAL,CAAeM,KAAf;AACD;;;;;;;uBAjBUP,e,EAAe,sI,EAAA,gEAMhB,wEANgB,C;AAMD,K;;;YANdA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,0E;AAAA;AAAA;ACD5B;;AACI;;AAAG;;AAAW;;AACd;;AAAmB;AAAA,mBAAS,IAAAQ,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAAM;;AACnD;;;;;;;;;sEDFaR,e,EAAe;cAL3B,uDAK2B;eALjB;AACTR,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;kBAMvB,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;AEdZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASae,e;AACX,+BAAoBC,MAApB,EAA4CC,KAA5C,EAAmE;AAAA;;AAA/C,aAAAD,MAAA,GAAAA,MAAA;AAAwB,aAAAC,KAAA,GAAAA,KAAA;AAA0B;;;;mCAI9D;AACN,eAAKC,UAAL,GAAkBC,MAAM,CAACD,UAAzB;AACAT,iBAAO,CAACC,GAAR,CAAY,KAAKQ,UAAjB;AACD;;;iCAEK;AACJ,eAAKF,MAAL,CAAYI,aAAZ,CAA0B,EAA1B,EAA8B;AAAEC,sBAAU,EAAE,KAAKJ;AAAnB,WAA9B;AACD;;;iCAEK;AACJ,eAAKD,MAAL,CAAYI,aAAZ,CAA0B,aAA1B,EAAyC;AAAEC,sBAAU,EAAE,KAAKJ;AAAnB,WAAzC;AACD;;;iCAEK;AACJ,eAAKD,MAAL,CAAYI,aAAZ,CAA0B,UAA1B,EAAsC;AAAEC,sBAAU,EAAE,KAAKJ;AAAnB,WAAtC;AACD;;;oCAEQ;AACP,eAAKD,MAAL,CAAYI,aAAZ,CAA0B,iBAA1B,EAA6C;AAAEC,sBAAU,EAAE,KAAKJ;AAAnB,WAA7C;AACD;;;+BAEG;AACF,eAAKD,MAAL,CAAYI,aAAZ,CAA0B,IAA1B,EAAgC;AAAEC,sBAAU,EAAE,KAAKJ;AAAnB,WAAhC;AACD;;;mCAEU;AACTE,gBAAM,CAACG,QAAP,CAAgBC,MAAhB;AACH;;;;;;;uBAhCYR,e,EAAe,uH,EAAA,+H;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,wP;AAAA;AAAA;ACT5B;;AACI;;AAAK;AAAA,mBAAS,IAAAS,MAAA,EAAT;AAAiB,WAAjB;;AAAL;;AACA;;AAAqB;AAAA,mBAAS,IAAAA,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAQ;;AAChD;;AAAa;AAAA,mBAAS,IAAAA,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAI;;AACpC;;AAAa;AAAA,mBAAS,IAAAC,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAW;;AAC3C;;AAAa;AAAA,mBAAS,IAAAC,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAQ;;AAExC;;AAAgB;AAAA,mBAAS,IAAAC,IAAA,EAAT;AAAe,WAAf;;AAAiB;;AAAK;;AAC1C;;;;;;;;sEDCaZ,e,EAAe;cAL3B,uDAK2B;eALjB;AACTjB,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBM;;AACI;;AACE;;AAAqB;;AAA0B;;AAC/C;;AACE;;AAAiB;;AAAY;;AAAK;;AAAqB;;AACvD;;AAAiB;;AAAgB;;AAAK;;AAAiC;;AACvE;;AAAkB;;AAAa;;AAAK;;AAAwB;;AAC5D;;AAAkB;;AAAiB;;AAAK;;AAAkC;;AAC1E;;AAAiB;;AAAgB;;AAAK;;AAA2B;;AACjE;;AAAiB;;AAAc;;AAAK;;AAA+B;;AACrE;;AACF;;AACJ;;;;;;AAR0C;;AAAA;;AACI;;AAAA;;AACF;;AAAA;;AACI;;AAAA;;AACF;;AAAA;;AACF;;AAAA;;;;;;AAtBlD;;AACQ;;AACE;;AAAqB;;AAAyB;;AAC9C;;AACE;;AAAiB;;AAAY;;AAAK;;AAAqC;;AACvE;;AAAiB;;AAAgB;;AAAK;;AAAgD;;AACtF;;AAAkB;;AAAa;;AAAK;;AAAsC;;AAC1E;;AAAkB;;AAAiB;;AAAK;;AAAiD;;AACzF;;AAAiB;;AAAgB;;AAAK;;AAAyC;;AACjF;;AACF;;AAGF;;AAaN;;;;;;AAtB8C;;AAAA;;AACI;;AAAA;;AACF;;AAAA;;AACI;;AAAA;;AACF;;AAAA;;AAKvC;;AAAA;;;;;;AAgBT;;AACA;;AACE;;AAAA;;AAEA;;AACE;;AAOA;;AACF;;AACF;;AACF;;;;;;;;AAQM;;AAAK;AAAA;;AAAA;;AAAA;AAAA;;AACH;;AAAuB;;AAAgB;;AACvC;;AACE;;AAAsB;;AAAsB;;AAC9C;;;;;;AAHuB;;AAAA;;AAEC;;AAAA;;;;QD1CnB4B,a;AAYX,6BAAmBC,GAAnB,EAA2CC,MAA3C,EAA8D;AAAA;;AAA3C,aAAAD,GAAA,GAAAA,GAAA;AAAwB,aAAAC,MAAA,GAAAA,MAAA;AAV3C,aAAAC,YAAA,GAAwC,EAAxC;AACA,aAAAC,OAAA,GAAmC,EAAnC;AACA,aAAAC,iBAAA,GAA6C,EAA7C;AACA,aAAAC,cAAA,GAA0C,EAA1C;AACA,aAAAC,UAAA,GAAqB,EAArB;AACA,aAAAC,IAAA,GAAO,IAAP;AAKiE;;;;mCAEzD;AACN,eAAKC,YAAL;AACA,eAAKC,SAAL;AACA,eAAKC,iBAAL,CAAuB,KAAKJ,UAA5B;AACA,eAAKK,eAAL;AACD;;;0CAEgB;AAAA;;AACb,eAAKX,GAAL,CAASY,wBAAT,GAAoCC,SAApC,CAA8C,UAACC,GAAD,EAAc;AAC1D,gBAAIC,YAAY,GAAGD,GAAG,CAACE,cAAvB;AACAD,wBAAY,CAACE,OAAb,CAAqB,UAAAC,OAAO,EAAI;AAC5B,mBAAI,CAACd,iBAAL,CAAuBe,IAAvB,CAA4B;AAC5B,yBAASD,OAAO,CAACE,YAAR,CAAqBC,WAArB,EADmB;AAE5B,+BAAeH,OAAO,CAACI,KAFK;AAG5B,mCAAmBJ,OAAO,CAACK,eAHC;AAI5B,gCAAgBL,OAAO,CAACM,MAJI;AAK5B,yCAAyBN,OAAO,CAACO,SALL;AAM5B,0CAA0BP,OAAO,CAACQ,UANN;AAO5B,uCAAuBR,OAAO,CAACS;AAPH,eAA5B;AASH,aAVD;AAWA,iBAAI,CAACtB,cAAL,GAAsB,KAAI,CAACD,iBAA3B;AACD,WAdD;AAeD;;;oCAEQ;AAAA;;AACP,eAAKJ,GAAL,CAAS4B,aAAT,GAAyBf,SAAzB,CAAmC,UAACC,GAAD,EAAc;AAC/C,gBAAIe,YAAY,GAAGf,GAAG,CAACgB,sBAAJ,CAA2B,GAA3B,CAAnB;;AACA,kBAAI,CAAC5B,YAAL,CAAkBiB,IAAlB,CAAuB;AACnB,uBAASU,YAAY,CAACT,YADH;AAEnB,6BAAeS,YAAY,CAAC9C,WAFT;AAGnB,iCAAmB8C,YAAY,CAACN,eAHb;AAInB,8BAAgBM,YAAY,CAACE,YAJV;AAKnB,uCAAyBF,YAAY,CAACJ,SALnB;AAMnB,wCAA0BI,YAAY,CAACH,UANpB;AAOnB,qCAAuBG,YAAY,CAACF;AAPjB,aAAvB;AASD,WAXD;AAYD;;;uCAEW;AAAA;;AACV,eAAK3B,GAAL,CAASQ,YAAT,GAAwBK,SAAxB,CAAkC,UAACC,GAAD,EAAc;AAC9C,kBAAI,CAACkB,kBAAL,GAA0B;AACxB,6BAAelB,GAAG,CAAC/B,WADK;AAExB,iCAAmB+B,GAAG,CAACS,eAFC;AAGxB,8BAAgBT,GAAG,CAACiB,YAHI;AAIxB,uCAAyBjB,GAAG,CAACW,SAJL;AAKxB,wCAA0BX,GAAG,CAACY;AALN,aAA1B;AAQD,WATD;AAUA,iBAAO,KAAKM,kBAAZ;AACD;;;qCAES;AAAA;;AACR,cAAMtD,SAAS,GAAG,KAAKuB,MAAL,CAAYM,IAAZ,CAAiB,wEAAjB,EAAkC;AAAE0B,iBAAK,EAAE,OAAT;AAAkBC,kBAAM,EAAE,OAA1B;AAAoCvD,gBAAI,EAAE;AAACG,kBAAI,EAAE;AAAP,aAA1C;AAA2DqD,sBAAU,EAAE;AAAvE,WAAlC,CAAlB;AAEAzD,mBAAS,CAAC0D,WAAV,GAAwBvB,SAAxB,CAAkC,UAAAwB,MAAM,EAAI;AAC1CzD,mBAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,kBAAI,CAACyD,MAAL,GAAcD,MAAd;AACD,WAHD;AAID;;;0CAEiBE,I,EAAc;AAC9B,eAAKjC,UAAL,GAAkB,KAAKkC,gBAAL,CAAsBD,IAAtB,CAAlB;AACA,eAAKlC,cAAL,GAAsB,EAAtB;AACD,eAAKoC,iBAAL,CAAuB,KAAKrC,iBAA5B;AACA;;;0CAEiBsC,c,EAAyC;AAAA;;AACzDA,wBAAc,CAACzB,OAAf,CAAuB,UAACb,iBAAD,EAAuB;AAC5C,gBAAKA,iBAAiB,CAACpC,KAAnB,CAA0B2E,QAA1B,CAAmC,MAAI,CAACrC,UAAxC,CAAJ,EAAyD;AACvD,oBAAI,CAACD,cAAL,CAAoBc,IAApB,CAAyBf,iBAAzB;AACD;AACF,WAJD;AAKD;;;yCAEgBwC,G,EAAK;AACpB,iBAAOA,GAAG,CAACC,OAAJ,CAAY,YAAZ,EAA0B,EAA1B,CAAP;AACD;;;;;;;uBA7FQ9C,a,EAAa,wH,EAAA,mI;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,onC;AAAA;AAAA;AChB1B;;AACA;;AAAe;;AAAwC;;AAEvD;;AA4BA;;AAmBI;;AAAoB;;AAAyB;;AAE7C;;AAAgB;AAAA,mBAAe,IAAAW,iBAAA,QAAf;AAAwC,WAAxC;;AAA0C;;AAE1D;;AACE;;AAKF;;AACJ;;;;;;AA1DK;;AAAA,6GAAmD,UAAnD,EAAmD,GAAnD;;AAoD0C;;AAAA;;;;;;;;;sEDvClCX,a,EAAa;cAPzB,uDAOyB;eAPf;AACT9B,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAOe,Q;;;;;;;;;;;;;;;;;;;;;;;;AEhB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGI;;AACI;;AACA;;AAAuB;;AAAgB;;AACvC;;AACA;;AAAwB;;AAAsB;;AAClD;;;;;;AAH2B;;AAAA;;AAEC;;AAAA;;;;QDAnB2E,a;AAGX,+BAAc;AAAA;;AADd,aAAAC,UAAA,GAAuB,EAAvB;AACiB;;;;mCAET;AACN,eAAKC,SAAL;AACD;;;oCAEQ;AACP,eAAKD,UAAL,GAAkB,CAChB;AACE/E,iBAAK,EAAE,EADT;AAEEiF,uBAAW,EAAE;AAFf,WADgB,EAKhB;AACEjF,iBAAK,EAAE,EADT;AAEEiF,uBAAW,EAAE;AAFf,WALgB,EAShB;AACEjF,iBAAK,EAAE,EADT;AAEEiF,uBAAW,EAAE;AAFf,WATgB,EAahB;AACEjF,iBAAK,EAAE,EADT;AAEEiF,uBAAW,EAAE;AAFf,WAbgB,EAiBhB;AACEjF,iBAAK,EAAE,EADT;AAEEiF,uBAAW,EAAE;AAFf,WAjBgB,EAqBhB;AACEjF,iBAAK,EAAE,EADT;AAEEiF,uBAAW,EAAE;AAFf,WArBgB,CAAlB;AA0BA,iBAAO,KAAKF,UAAZ;AACD;;;;;;;uBArCUD,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,kP;AAAA;AAAA;ACP1B;;AAAe;;AAAmB;;AAElC;;AACI;;AAMJ;;;;AANsB;;AAAA;;;;;;;;;sEDITA,a,EAAa;cALzB,uDAKyB;eALf;AACT7E,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEA;;AACE;;AACE;;AACE;;AACE;;AACF;;AACA;;AAGF;;AACA;;AAAG;;AAAuB;;AAC5B;;AACF;;;;;;AARQ;;AAAA;;AAMD;;AAAA;;;;QDLM+E,W;AAIX,6BAAc;AAAA;;AAFd,aAAAC,cAAA,GAAiB,KAAjB;AAIA,aAAAC,SAAA,GAAsB,EAAtB;AAFiB;;;;mCAIT;AACN,eAAKC,aAAL;AACD;;;wCAEY;AACX,eAAKD,SAAL,GAAiB,CACf;AACEpF,iBAAK,kCADP;AAEEiF,uBAAW,EAAE;AAFf,WADe,EAKf;AACEjF,iBAAK,gCADP;AAEEiF,uBAAW,EAAE;AAFf,WALe,EASf;AACEjF,iBAAK,8CADP;AAEEiF,uBAAW,EAAE;AAFf,WATe,EAaf;AACEjF,iBAAK,mDADP;AAEEiF,uBAAW,EAAE;AAFf,WAbe,EAiBf;AACEjF,iBAAK,kCADP;AAEEiF,uBAAW,EAAE;AAFf,WAjBe,EAqBf;AACEjF,iBAAK,8CADP;AAEEiF,uBAAW,EAAE;AAFf,WArBe,CAAjB;AA0BA,iBAAO,KAAKG,SAAZ;AACD;;;;;;;uBAxCUF,W;AAAW,K;;;YAAXA,W;AAAW,6B;AAAA,c;AAAA,a;AAAA,yF;AAAA;AAAA;ACPxB;;AAAe;;AAA2C;;AAE1D;;;;AAAK;;AAAA;;;;;;;;;sEDKQA,W,EAAW;cALvB,uDAKuB;eALb;AACTjF,kBAAQ,EAAE,QADD;AAETC,qBAAW,EAAE,qBAFJ;AAGTC,mBAAS,EAAE,CAAC,oBAAD;AAHF,S;AAKa,Q;;;;;;;;;;;;;;;;;;;;AEPxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOamF,kB;AAIX,oCAAc;AAAA;;AAFJ,aAAAC,WAAA,GAAc,IAAI,0DAAJ,EAAd;AACV,aAAAC,UAAA,GAAqB,EAArB;AACiB;;;;mCAET,CACP;;;iCAEQC,K,EAAsB;AAC7B,cAAMlB,IAAI,GAAYkB,KAAK,CAACC,MAAN,CAAkCC,KAAlC,CAAwCtC,WAAxC,EAAtB;AACA,eAAKmC,UAAL,GAAkBjB,IAAlB;AACA,eAAKgB,WAAL,CAAiBK,IAAjB,CAAsBrB,IAAtB;AACD;;;;;;;uBAbUe,kB;AAAkB,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,4O;AAAA;AAAA;ACP/B;;AACI;;AAAyD;AAAA,mBAAS,IAAAO,QAAA,QAAT;AAAyB,WAAzB;;AAAzD;;AACA;;AACE;;AACF;;AACF;;;;;;;;sEDEWP,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTrF,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;gBAE5B;;;;;;;;;;;;;;;;;;;;AETH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa2F,a;AAEX,+BAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,a;AAAa,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,4S;AAAA;AAAA;ACP1B;;AAAe;;AAAoB;;AAEnC;;AACI;;AACA;;AAAiB;;AAAK;;AACtB;;AACA;;AAAiB;;AAAK;;AACtB;;AACA;;AAAiB;;AAAmB;;AACpC;;AACA;;AAAiB;;AAAoB;;AACzC;;;;;;;;sEDJaA,a,EAAa;cALzB,uDAKyB;eALf;AACT7F,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;AEP1B;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAM4F,MAAM,GAAG;AAClB3G,+BAAyB,EAAE,wDADT;AAElBC,gCAA0B,EAAE,6EAFV;AAGlBC,gBAAU,EAAE,mFAHM;AAIlBC,oBAAc,EAAE;AAJE,KAAf;;;;;;;;;;;;;;;;ACAP;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMyG,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIvF,OAAO,CAACwF,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { config } from './../environments/config.dev';\n\nexport interface CountryStatisticModel {\n  \"title\": string;\n  \"total_cases\": string;\n  \"total_recovered\": string;\n  \"total_deaths\": string;\n  \"total_new_cases_today\": string,\n  \"total_new_deaths_today\": string,\n  \"total_serious_cases\": string\n}\n\nexport interface WorldStatisticModel {\n  \"total_cases\": string;\n  \"total_deaths\": string;\n  \"total_recovered\": string;\n  \"new_cases\": string;\n  \"new_deaths\": string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class ApiService {\n\n  constructor(private http: HttpClient) { }\n\n\n  params1 = new HttpParams()\n  .set('country', 'israel');\n\n  headersOptios = new HttpHeaders()\n  .set('x-rapidapi-key', 'fd565ad5a2msh8156f64d17d4454p1c66fdjsn1f30d420a80a')\n\n  options = { params: this.params1, headers: this.headersOptios };\n\n  getAllCountriesStat(){\n    return this.http.get(config.GET_ALL_COUNTRIE_STAT_URL);\n  }\n\n  getAllCountriesSecondery(){\n    return this.http.get(config.GET_ALL_COUNTRIES_API_URL2, { headers: this.headersOptios});\n  }\n\n  getIsraelStat(){\n    return this.http.get(config.GET_ISRAEL, this.options);\n  }\n\n  getWorldStat(){\n    return this.http.get(config.GET_WORLD_STAT, { headers: this.headersOptios });\n  }\n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { InfoComponent } from './info/info.component';\nimport { SympComponent } from './symp/symp.component';\nimport { QaComponent } from './qa/qa.component';\n\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'information', component: InfoComponent },\n  { path: 'symptoms', component: SympComponent },\n  { path: 'protectyourself', component: SympComponent },\n  { path: 'qa', component: QaComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'corona';\n}\n","<app-header></app-header>\n<!-- <app-sidebar></app-sidebar> -->\n<router-outlet></router-outlet>\n<!-- <app-home></app-home> -->","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HomeComponent } from './home/home.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SearchBarComponent } from './search-bar/search-bar.component';\nimport { MatSidenavModule} from '@angular/material/sidenav';\nimport { InfoComponent } from './info/info.component';\nimport { SympComponent } from './symp/symp.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { QaComponent } from './qa/qa.component';\n// import { BrowserAnimationsModule } from '@angular/animations'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomeComponent,\n    SearchBarComponent,\n    InfoComponent,\n    SympComponent,\n    DialogComponent,\n    QaComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatSidenavModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatExpansionModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [ DialogComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent implements OnInit {\n\n  total_cases: string;\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n\n  ngOnInit(): void {\n    console.log(this.data.name);\n    this.total_cases = this.data.name;\n    \n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<!-- <h1 mat-dialog-title>Hi</h1>\n<div mat-dialog-content>\n  <p>What's your favorite animal?</p>\n  <mat-form-field>\n    <mat-label>Favorite Animal</mat-label>\n  </mat-form-field>\n</div> -->\n<div mat-dialog-actions>\n    <p>TOTAL CASES</p>\n    <button mat-button (click)=\"onNoClick()\">Cancel</button> \n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  constructor(private router: Router, private route: ActivatedRoute) { }\r\n\r\n  public innerWidth: any;\r\n\r\n  ngOnInit(): void {\r\n    this.innerWidth = window.innerWidth;\r\n    console.log(this.innerWidth);\r\n  }\r\n\r\n  onHome(){\r\n    this.router.navigateByUrl('', { relativeTo: this.route });\r\n  }\r\n\r\n  onInfo(){\r\n    this.router.navigateByUrl('information', { relativeTo: this.route });\r\n  }\r\n\r\n  onSymp(){\r\n    this.router.navigateByUrl('symptoms', { relativeTo: this.route });\r\n  }\r\n\r\n  onProtect(){\r\n    this.router.navigateByUrl('protectyourself', { relativeTo: this.route });\r\n  }\r\n\r\n  onQA(){\r\n    this.router.navigateByUrl('qa', { relativeTo: this.route });\r\n  }\r\n\r\n  onReload() {\r\n    window.location.reload();\r\n}\r\n\r\n\r\n}\r\n","<div class=\"header-wrapper\">\r\n    <img (click)=\"onHome()\" src=\"../../assets/icon.svg\" id=\"logo\">\r\n    <p id=\"corona-title\" (click)=\"onHome()\">COVID-19</p>\r\n    <p id=\"home\" (click)=\"onHome()\">HOME</p>\r\n    <p id=\"info\" (click)=\"onInfo()\">INFORMATION</p>\r\n    <p id=\"symp\" (click)=\"onSymp()\">SYMPTOMS</p>\r\n    <!-- <p id=\"protect\" (click)=\"onProtect()\">PROTECT YOURSELF</p> -->\r\n    <p id=\"protect\" (click)=\"onQA()\">Q & A</p>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService, CountryStatisticModel, WorldStatisticModel } from '../api.service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { DialogComponent } from '../dialog/dialog.component';\r\n\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n}\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\n\r\nexport class HomeComponent implements OnInit {\r\n\r\n  ILStatsArray: CountryStatisticModel[] = [];\r\n  ResStat: CountryStatisticModel[] = [];\r\n  AllCountriesArray: CountryStatisticModel[] = [];\r\n  StatsToDisplay: CountryStatisticModel[] = [];\r\n  searchText: string = \"\";\r\n  open = true;\r\n  animal: string;\r\n  name: string;\r\n  WorldStatResObject: any;\r\n\r\n  constructor(public api: ApiService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getWorldStat();\r\n    this.getIsrael();\r\n    this.searchTextChanged(this.searchText);\r\n    this.getAllCountries();\r\n  }\r\n\r\n    getAllCountries(){\r\n      this.api.getAllCountriesSecondery().subscribe((res: any) => {\r\n        let resCountries = res.countries_stat;\r\n        resCountries.forEach(element => {\r\n            this.AllCountriesArray.push({\r\n            \"title\": element.country_name.toUpperCase(),\r\n            \"total_cases\": element.cases,\r\n            \"total_recovered\": element.total_recovered,\r\n            \"total_deaths\": element.deaths,\r\n            \"total_new_cases_today\": element.new_cases,\r\n            \"total_new_deaths_today\": element.new_deaths,\r\n            \"total_serious_cases\": element.serious_critical\r\n          })\r\n        });\r\n        this.StatsToDisplay = this.AllCountriesArray;\r\n      });\r\n    }\r\n\r\n    getIsrael(){\r\n      this.api.getIsraelStat().subscribe((res: any) => {\r\n        let latestStatIL = res.latest_stat_by_country[\"0\"];\r\n        this.ILStatsArray.push({\r\n            \"title\": latestStatIL.country_name,\r\n            \"total_cases\": latestStatIL.total_cases,\r\n            \"total_recovered\": latestStatIL.total_recovered,\r\n            \"total_deaths\": latestStatIL.total_deaths,\r\n            \"total_new_cases_today\": latestStatIL.new_cases,\r\n            \"total_new_deaths_today\": latestStatIL.new_deaths,\r\n            \"total_serious_cases\": latestStatIL.serious_critical\r\n        })\r\n      })\r\n    }\r\n\r\n    getWorldStat(){\r\n      this.api.getWorldStat().subscribe((res: any) => {\r\n        this.WorldStatResObject = {\r\n          \"total_cases\": res.total_cases,\r\n          \"total_recovered\": res.total_recovered,\r\n          \"total_deaths\": res.total_deaths,\r\n          \"total_new_cases_today\": res.new_cases,\r\n          \"total_new_deaths_today\": res.new_deaths,\r\n        };\r\n\r\n      })\r\n      return this.WorldStatResObject;\r\n    }\r\n\r\n    openDialog(): void {\r\n      const dialogRef = this.dialog.open(DialogComponent, { width: '400px', height: '450px' , data: {name: \"total\"}, panelClass: 'myapp-background'\r\n      });\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        console.log('The dialog was closed');\r\n        this.animal = result;\r\n      });\r\n    }\r\n\r\n    searchTextChanged(text: string) {\r\n      this.searchText = this.stripWhiteSpaces(text);\r\n      this.StatsToDisplay = [];\r\n     this.addTasksToDisplay(this.AllCountriesArray);\r\n    }\r\n\r\n    addTasksToDisplay(countriesStats: CountryStatisticModel[]) {\r\n      countriesStats.forEach((AllCountriesArray) => {\r\n        if ((AllCountriesArray.title).includes(this.searchText)) {\r\n          this.StatsToDisplay.push(AllCountriesArray);\r\n        }\r\n      })\r\n    }\r\n\r\n    stripWhiteSpaces(str) {\r\n      return str.replace(/^\\s+|\\s+$/g, '');\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<div class=\"component-color\">\r\n<h4 id=\"title\">CORONAVIRUS DISEASE REAL-TIME STATISTICS</h4>\r\n<!-- ; else loader -->\r\n<div *ngIf=\"AllCountriesArray.length > 1 ; else loader \">\r\n        <div class=\"WorldlCard\">\r\n          <h2 id=\"IsraelTitle\">COVID-19 WORLD STATISTICS</h2>\r\n          <div class=\"grid-container-row\">\r\n            <p id=\"casesIL\"> TOTAL CASES <br> {{ WorldStatResObject.total_cases }} </p>\r\n            <p id=\"casesIL\"> NEW CASES (24H) <br> +{{ WorldStatResObject.total_new_cases_today }} </p>\r\n            <p id=\"deathsIL\"> TOTAL DEATHS <br> {{ WorldStatResObject.total_deaths }} </p>\r\n            <p id=\"deathsIL\"> NEW DEATHS (24H) <br> +{{ WorldStatResObject.total_new_deaths_today }} </p>\r\n            <p id=\"otherIL\"> TOTAL RECOVERED <br> {{ WorldStatResObject.total_recovered }} </p>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      <div *ngFor=\"let stat of ILStatsArray\">\r\n          <div class=\"israelCard\">\r\n            <h2 id=\"IsraelTitle\">COVID-19 ISRAEL STATISTICS</h2>\r\n            <div class=\"grid-container\">\r\n              <p id=\"casesIL\"> TOTAL CASES <br> {{stat.total_cases}} </p>\r\n              <p id=\"casesIL\"> NEW CASES (24H) <br> {{ stat.total_new_cases_today }} </p>\r\n              <p id=\"deathsIL\"> TOTAL DEATHS <br> {{ stat.total_deaths }} </p>\r\n              <p id=\"deathsIL\"> NEW DEATHS (24H) <br> {{ stat.total_new_deaths_today }} </p>\r\n              <p id=\"otherIL\"> TOTAL RECOVERED <br> {{ stat.total_recovered }} </p>\r\n              <p id=\"otherIL\"> SERIOUS CASES <br> {{ stat.total_serious_cases }} </p>\r\n            </div>\r\n          </div>\r\n      </div>\r\n</div>\r\n\r\n<ng-template #loader>\r\n  <div id=\"loaderContainer\">\r\n  <div class=\"loader loader--style2\" title=\"1\">\r\n    <svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n       width=\"150px\" height=\"150px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\r\n    <path fill=\"#000\" d=\"M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z\">\r\n      <animateTransform attributeType=\"xml\"\r\n        attributeName=\"transform\"\r\n        type=\"rotate\"\r\n        from=\"0 25 25\"\r\n        to=\"360 25 25\"\r\n        dur=\"0.6s\"\r\n        repeatCount=\"indefinite\"/>\r\n      </path>\r\n    </svg>\r\n  </div>\r\n</div>\r\n</ng-template>\r\n\r\n    <h4 id=\"worldtitle\">COVID-19 WORLD STATISTICS</h4>\r\n\r\n    <app-search-bar (textChanged)=\"searchTextChanged($event)\"></app-search-bar>\r\n\r\n    <div class=\"cards-container\">\r\n      <div (click)=\"openDialog()\" class=\"card\" *ngFor=\"let stat of StatsToDisplay\" >\r\n        <span id=\"countryName\">{{ stat.title }}</span>\r\n        <div class=\"centertxt\"></div>\r\n          <span id=\"totalCases\">{{ stat.total_cases }}</span>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-info',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.css']\n})\nexport class InfoComponent implements OnInit {\n\n  FactsArray: Object[] = [];\n  constructor() { }\n\n  ngOnInit(): void {\n    this.FactsData();\n  }\n\n  FactsData(){\n    this.FactsArray = [\n      {\n        title: \"\",\n        description: \"\"\n      },\n      {\n        title: \"\",\n        description: \"\"\n      },\n      {\n        title: \"\",\n        description: \"\"\n      },\n      {\n        title: \"\",\n        description: \"\"\n      },\n      {\n        title: \"\",\n        description: \"\"\n      },\n      {\n        title: \"\",\n        description: \"\"\n      }\n    ];\n    return this.FactsArray;\n  }\n\n}\n","<h4 id=\"title\">INFORMATION & FACTS</h4>\n\n<div class=\"container2\">\n    <div class=\"card\" *ngFor=\"let fact of FactsArray\" >\n        <img style=\"width: 50px; height: 50px;\" src=\"../../assets/world.png\">\n        <span id=\"countryName\">{{ fact.title }}</span>\n        <div class=\"centertxt\"></div>\n        <span id=\"description\" >{{ fact.description }}</span>\n    </div>\n</div>\n\n\n\n\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-qa',\n  templateUrl: './qa.component.html',\n  styleUrls: ['./qa.component.css']\n})\nexport class QaComponent implements OnInit {\n\n  panelOpenState = false;\n\n  constructor() { }\n\n  questions: Object[] = [];\n\n  ngOnInit(): void {\n    this.QuestionsData();\n  }\n\n  QuestionsData(){\n    this.questions = [\n      {\n        title:  `WHAT IS SARS-CoV-2 / COVID-19?`,\n        description: \"Severe Acute Respiratory Syndrome Coronavirus-2 (SARS-CoV-2) is the name given to the 2019 novel coronavirus. COVID-19 is the name given to the disease associated with the virus. SARS-CoV-2 is a new strain of coronavirus that has not been previously identified in humans.\"\n      },\n      {\n        title: `When is a person infectious?`,\n        description: \"The infectious period may begin one to two days before symptoms appear, but people are likely most infectious during the symptomatic period, even if symptoms are mild and very non-specific. The infectious period is now estimated to last for 7-12 days in moderate cases and up to two weeks on average in severe cases.\"\n      },\n      {\n        title: `Can COVID-19 spread in warm sunny weather?`,\n        description: \"COVID-19 can survive temperatures higher than 25C. You can catch it no matter how sunny and warm it is. So, whatever the weather you should follow the official advice to protect yourself from the virus. Getting out into the sunshine, if you can, is still a good idea as this helps your body produce vitamin D which is important for your immune system. \"\n      },\n      {\n        title: `Will drinking lots of hot drinks stop COVID-19?`,\n        description: \"There is no drink hot or cold that will protect you from COVID-19 or cure the illness. So far, there’s no proven cure for COVID-19 but most people recover by themselves. Taking paracetamol, drinking lots of liquids, and getting enough rest can help you manage your symptoms. \"\n      },\n      {\n        title: `Can Chloroquine cure COVID-19?`,\n        description: \"At the moment there is no proven cure for COVID-19, but most people will recover on their own without needing professional medical care. If you think you have COVID-19 and are having difficulty breathing, contact your local health facility as you will need professional medical care. \"\n      },\n      {\n        title: `Can Black and African people get COVID-19?`,\n        description: \"Anyone can get COVID-19, regardless of race or skin colour. Older people and people with other health conditions, such as asthma, heart diseases and diabetes, are more at risk of getting seriously ill. \"\n      }\n    ];\n    return this.questions;\n  }\n\n\n\n}\n","<h4 id=\"title\">QUESTIONS AND ANSWERS ABOUT THE CORONAVIRUS</h4>\n\n<div *ngFor=\"let quest of questions\">\n  <mat-expansion-panel>\n    <mat-expansion-panel-header class=\"panel\">\n      <mat-panel-title class=\"questTitle\">\n        {{ quest.title }}\n      </mat-panel-title>\n      <mat-panel-description>\n        <!-- This is a summary of the content -->\n      </mat-panel-description>\n    </mat-expansion-panel-header>\n    <p>{{ quest.description }}</p>\n  </mat-expansion-panel>\n</div>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search-bar',\r\n  templateUrl: './search-bar.component.html',\r\n  styleUrls: ['./search-bar.component.css']\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n\r\n  @Output() textChanged = new EventEmitter<string>();\r\n  serachText: string = \"\";\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onChange(event: KeyboardEvent) {\r\n    const text: string = (event.target as HTMLInputElement).value.toUpperCase();\r\n    this.serachText = text;\r\n    this.textChanged.emit(text);\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"search-box\">\n    <input class=\"input-box\" placeholder=\"Search country...\" (keyup)=\"onChange($event)\">\n    <div class=\"icon-box\">\n      <img style=\" width: 15px; height: 16px; margin-right: 10px;\" src=\"../../assets/search.svg\" alt=\"search-icon\">\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-symp',\n  templateUrl: './symp.component.html',\n  styleUrls: ['./symp.component.css']\n})\nexport class SympComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4 id=\"title\">CORONAVIRUS SYMPTOMS</h4>\n\n<div class=\"grid-container\">\n    <img id=\"coughimg\" src=\"../../assets/cough.png\">\n    <p id=\"symptext\">COUGH</p>\n    <img class=\"images\" src=\"../../assets/fever.png\">\n    <p id=\"symptext\">FEVER</p>\n    <img class=\"images\" src=\"../../assets/shortness-of-breath.png\">\n    <p id=\"symptext\">SHORTNESS OF BREATH</p>\n    <img class=\"images\" src=\"../../assets/difficulty-breathing.png\">\n    <p id=\"symptext\">DIFFICULTY BREATHING</p>\n</div>\n","export const config = {\n    GET_ALL_COUNTRIE_STAT_URL: \"https://thevirustracker.com/free-api?countryTotals=ALL\",\n    GET_ALL_COUNTRIES_API_URL2: \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_country.php\",\n    GET_ISRAEL: \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/latest_stat_by_country.php\",\n    GET_WORLD_STAT: \"https://coronavirus-monitor.p.rapidapi.com/coronavirus/worldstat.php\"\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: true\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}