{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/api.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dialog/dialog.component.ts","webpack:///src/app/dialog/dialog.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/info/info.component.ts","webpack:///src/app/info/info.component.html","webpack:///src/app/qa/qa.component.ts","webpack:///src/app/qa/qa.component.html","webpack:///src/app/search-bar/search-bar.component.ts","webpack:///src/app/search-bar/search-bar.component.html","webpack:///src/app/symp/symp.component.ts","webpack:///src/app/symp/symp.component.html","webpack:///src/environments/config.dev.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiService","http","get","GET_ALL_COUNTRIE_STAT_URL","providedIn","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","entryComponents","DialogComponent","dialogRef","data","console","log","close","onNoClick","HeaderComponent","router","route","navigateByUrl","relativeTo","onHome","onInfo","onSymp","onProtect","onQA","HomeComponent","api","dialog","StatsArray","ResStat","AllCountriesArray","StatsToDisplay","searchText","open","getIsrael","getAllCountries","searchTextChanged","width","height","name","animal","panelClass","afterClosed","subscribe","result","getAllCountriesStat","res","countryitems","Object","forEach","element","push","total_cases","total_recovered","total_deaths","total_new_cases_today","total_new_deaths_today","total_serious_cases","index","text","stripWhiteSpaces","addTasksToDisplay","countriesStats","match","str","replace","InfoComponent","FactsArray","FactsData","description","QaComponent","panelOpenState","questions","QuestionsData","SearchBarComponent","textChanged","serachText","event","target","value","emit","onChange","SympComponent","config","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { config } from './../environments/config.dev';\r\n\r\nexport interface CountryStatisticModel {\r\n  \"title\": string;\r\n  \"total_cases\": string;\r\n  \"total_recovered\": string;\r\n  \"total_deaths\": string;\r\n  \"total_new_cases_today\": string,\r\n  \"total_new_deaths_today\": string,\r\n  \"total_serious_cases\": string\r\n}\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n\r\nexport class ApiService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAllCountriesStat(){\r\n    return this.http.get(config.GET_ALL_COUNTRIE_STAT_URL);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { InfoComponent } from './info/info.component';\r\nimport { SympComponent } from './symp/symp.component';\r\nimport { QaComponent } from './qa/qa.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  { path: 'information', component: InfoComponent },\r\n  { path: 'symptoms', component: SympComponent },\r\n  { path: 'protectyourself', component: SympComponent },\r\n  { path: 'qa', component: QaComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'corona';\n}\n","<app-header></app-header>\r\n<!-- <app-sidebar></app-sidebar> -->\r\n<router-outlet></router-outlet>\r\n<!-- <app-home></app-home> -->","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { SearchBarComponent } from './search-bar/search-bar.component';\r\nimport { MatSidenavModule} from '@angular/material/sidenav';\r\nimport { InfoComponent } from './info/info.component';\r\nimport { SympComponent } from './symp/symp.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport { QaComponent } from './qa/qa.component';\r\n// import { BrowserAnimationsModule } from '@angular/animations'\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n    SearchBarComponent,\r\n    InfoComponent,\r\n    SympComponent,\r\n    DialogComponent,\r\n    QaComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    MatSidenavModule,\r\n    MatDialogModule,\r\n    MatButtonModule,\r\n    MatExpansionModule,\r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [ DialogComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-dialog',\r\n  templateUrl: './dialog.component.html',\r\n  styleUrls: ['./dialog.component.css']\r\n})\r\nexport class DialogComponent implements OnInit {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\r\n\r\n  ngOnInit(): void {\r\n    console.log(this.data);\r\n    \r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<!-- <h1 mat-dialog-title>Hi</h1>\r\n<div mat-dialog-content>\r\n  <p>What's your favorite animal?</p>\r\n  <mat-form-field>\r\n    <mat-label>Favorite Animal</mat-label>\r\n  </mat-form-field>\r\n</div> -->\r\n<div mat-dialog-actions>\r\n    <button mat-button (click)=\"onNoClick()\">Cancel</button> \r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor(private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onHome(){\r\n    this.router.navigateByUrl('', { relativeTo: this.route });\r\n  }\r\n\r\n  onInfo(){\r\n    this.router.navigateByUrl('information', { relativeTo: this.route });\r\n  }\r\n\r\n  onSymp(){\r\n    this.router.navigateByUrl('symptoms', { relativeTo: this.route });\r\n  }\r\n\r\n  onProtect(){\r\n    this.router.navigateByUrl('protectyourself', { relativeTo: this.route });\r\n  }\r\n\r\n  onQA(){\r\n    this.router.navigateByUrl('qa', { relativeTo: this.route });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"header-wrapper\">\r\n    <img src=\"../../assets/icon.svg\" id=\"tommy-logo\">\r\n    <p id=\"corona-title\">COVID-19</p>\r\n    <p id=\"home\" (click)=\"onHome()\">HOME</p>\r\n    <p id=\"info\" (click)=\"onInfo()\">INFORMATION</p>\r\n    <p id=\"symp\" (click)=\"onSymp()\">SYMPTOMS</p>\r\n    <p id=\"protect\" (click)=\"onProtect()\">PROTECT YOURSELF</p>\r\n    <p id=\"qa\" (click)=\"onQA()\">Q & A</p>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService, CountryStatisticModel } from '../api.service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { DialogComponent } from '../dialog/dialog.component';\r\n\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n}\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\n\r\nexport class HomeComponent implements OnInit {\r\n  StatsArray: CountryStatisticModel[] = [];\r\n  ResStat: CountryStatisticModel[] = [];\r\n  AllCountriesArray: CountryStatisticModel[] = [];\r\n  StatsToDisplay: CountryStatisticModel[] = [];\r\n  searchText: string = \"\";\r\n  open = true;\r\n\r\n  animal: string;\r\n  name: string;\r\n\r\n\r\n  constructor(public api: ApiService, public dialog: MatDialog) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getIsrael();\r\n    this.getAllCountries();\r\n    this.searchTextChanged(this.searchText);\r\n  }\r\n\r\n// \r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(DialogComponent, { width: '400px', height: '450px' , data: {name: this.name, animal: this.animal}, panelClass: 'myapp-background'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      this.animal = result;\r\n    });\r\n  }\r\n  \r\n// \r\n  getAllCountries() {\r\n    this.api.getAllCountriesStat().subscribe((res: any) => {\r\n      this.ResStat = res.countryitems[\"0\"];\r\n      Object.keys(this.ResStat).forEach(element => {\r\n           this.AllCountriesArray.push({\r\n          \"title\": this.ResStat[element].title,\r\n          \"total_cases\": this.ResStat[element].total_cases,\r\n          \"total_recovered\": this.ResStat[element].total_recovered,\r\n          \"total_deaths\": this.ResStat[element].total_deaths,\r\n          \"total_new_cases_today\": this.ResStat[element].total_new_cases_today,\r\n          \"total_new_deaths_today\": this.ResStat[element].total_new_deaths_today,\r\n          \"total_serious_cases\": this.ResStat[element].total_serious_cases\r\n        }) \r\n      });\r\n\r\n      this.StatsToDisplay = this.AllCountriesArray;\r\n    });\r\n  }\r\n\r\n    getIsrael(){\r\n        this.api.getAllCountriesStat().subscribe((res: any) => {\r\n          this.ResStat = res.countryitems;\r\n          let index = 76;\r\n          this.StatsArray.push({\r\n            \"title\": this.ResStat[\"0\"][index].title,\r\n            \"total_cases\": this.ResStat[\"0\"][index].total_cases,\r\n            \"total_recovered\": this.ResStat[\"0\"][index].total_recovered,\r\n            \"total_deaths\": this.ResStat[\"0\"][index].total_deaths,\r\n            \"total_new_cases_today\": this.ResStat[\"0\"][index].total_new_cases_today,\r\n            \"total_new_deaths_today\": this.ResStat[\"0\"][index].total_new_deaths_today,\r\n            \"total_serious_cases\": this.ResStat[\"0\"][index].total_serious_cases\r\n        })\r\n          console.log(this.StatsArray);\r\n      })\r\n    }\r\n\r\n    searchTextChanged(text: string) {\r\n      this.searchText = this.stripWhiteSpaces(text);\r\n      this.StatsToDisplay = [];\r\n     this.addTasksToDisplay(this.AllCountriesArray);\r\n    }\r\n  \r\n    addTasksToDisplay(countriesStats: CountryStatisticModel[]) {\r\n      countriesStats.forEach((AllCountriesArray) => {\r\n        if ((AllCountriesArray.title).match(this.searchText)) {\r\n          this.StatsToDisplay.push(AllCountriesArray);\r\n        }\r\n      })\r\n    }\r\n  \r\n    stripWhiteSpaces(str) {\r\n      return str.replace(/^\\s+|\\s+$/g, '');\r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n    \r\n\r\n    \r\n\r\n  \r\n\r\n\r\n\r\n","<h4 id=\"title\">CORONAVIRUS DISEASE REAL-TIME STATISTICS</h4>\r\n\r\n      <div *ngFor=\"let stat of StatsArray\">\r\n          <div class=\"israelCard\">\r\n            <h2 id=\"IsraelTitle\">COVID-19 ISRAEL STATISTICS</h2>\r\n            <div class=\"grid-container\">\r\n              <p id=\"casesIL\"> TOTAL CASES <br> {{stat.total_cases}} </p>\r\n              <p id=\"casesIL\"> NEW CASES (LAST 24H) <br> +{{ stat.total_new_cases_today }} </p>\r\n              <p id=\"deathsIL\"> TOTAL DEATHS <br> {{ stat.total_deaths }} </p>\r\n              <p id=\"deathsIL\"> NEW DEATHS (LAST 24H) <br> +{{ stat.total_new_deaths_today }} </p>\r\n              <p id=\"otherIL\"> TOTAL RECOVERED <br> {{ stat.total_recovered }} </p>\r\n              <p id=\"otherIL\"> SERIOUS CASES <br> {{ stat.total_serious_cases }} </p>\r\n            </div>\r\n          </div>\r\n      </div>\r\n\r\n    <h4 id=\"worldtitle\">COVID-19 WORLD STATISTICS</h4>\r\n\r\n    <app-search-bar (textChanged)=\"searchTextChanged($event)\"></app-search-bar>\r\n\r\n    <div class=\"container2\">\r\n      <div (click)=\"openDialog()\" class=\"card\" *ngFor=\"let stat of StatsToDisplay\" >\r\n        <span id=\"countryName\">{{ stat.title | uppercase }}</span>\r\n        <div class=\"centertxt\"></div>\r\n          <span id=\"totalCases\">{{ stat.total_cases }}</span>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-info',\r\n  templateUrl: './info.component.html',\r\n  styleUrls: ['./info.component.css']\r\n})\r\nexport class InfoComponent implements OnInit {\r\n\r\n  FactsArray: Object[] = [];\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.FactsData();\r\n  }\r\n\r\n  FactsData(){\r\n    this.FactsArray = [\r\n      {\r\n        title: \"harta1\",\r\n        description: \"class InfoComponent implements OnInitexport implements OnInitexportimplements OnInitexportimplements OnInitexportimplements OnInitexport class InfoComponent implements OnInit class InfoComponent implements class InfoComponent implements class InfoComponent implements class InfoComponent implements\"\r\n      },\r\n      {\r\n        title: \"harta2\",\r\n        description: \"harta2\"\r\n      },\r\n      {\r\n        title: \"harta2\",\r\n        description: \"harta2\"\r\n      },\r\n      {\r\n        title: \"harta2\",\r\n        description: \"harta2\"\r\n      },\r\n      {\r\n        title: \"harta2\",\r\n        description: \"harta2\"\r\n      },\r\n      {\r\n        title: \"harta2\",\r\n        description: \"harta2\"\r\n      }\r\n    ];\r\n    return this.FactsArray;\r\n  }\r\n\r\n}\r\n","<h4 id=\"title\">INFORMATION & FACTS</h4>\r\n\r\n<div class=\"container2\">\r\n    <div class=\"card\" *ngFor=\"let fact of FactsArray\" >\r\n        <img style=\"width: 50px; height: 50px;\" src=\"../../assets/world.png\">\r\n        <span id=\"countryName\">{{ fact.title }}</span>\r\n        <div class=\"centertxt\"></div>\r\n        <span id=\"description\" >{{ fact.description }}</span>\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n  ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-qa',\r\n  templateUrl: './qa.component.html',\r\n  styleUrls: ['./qa.component.css']\r\n})\r\nexport class QaComponent implements OnInit {\r\n\r\n  panelOpenState = false;\r\n\r\n  constructor() { }\r\n\r\n  questions: Object[] = [];\r\n\r\n  ngOnInit(): void {\r\n    this.QuestionsData();\r\n  }\r\n\r\n  QuestionsData(){\r\n    this.questions = [\r\n      {\r\n        title:  `WHAT IS SARS-CoV-2 / COVID-19?`,\r\n        description: \"Severe Acute Respiratory Syndrome Coronavirus-2 (SARS-CoV-2) is the name given to the 2019 novel coronavirus. COVID-19 is the name given to the disease associated with the virus. SARS-CoV-2 is a new strain of coronavirus that has not been previously identified in humans.\"\r\n      },\r\n      {\r\n        title: \"harta2\",\r\n        description: \"harta2\"\r\n      },\r\n      {\r\n        title: \"harta2\",\r\n        description: \"harta2\"\r\n      },\r\n      {\r\n        title: \"harta2\",\r\n        description: \"harta2\"\r\n      },\r\n      {\r\n        title: \"harta2\",\r\n        description: \"harta2\"\r\n      },\r\n      {\r\n        title: \"harta2\",\r\n        description: \"harta2\"\r\n      }\r\n    ];\r\n    return this.questions;\r\n  }\r\n\r\n  \r\n\r\n}\r\n","<h4 id=\"title\">QUESTIONS AND ANSWERS ABOUT THE CORONAVIRUS</h4>\r\n\r\n<div *ngFor=\"let quest of questions\">\r\n  <mat-expansion-panel>\r\n    <mat-expansion-panel-header class=\"panel\">\r\n      <mat-panel-title class=\"questTitle\">\r\n        {{ quest.title }}\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        <!-- This is a summary of the content -->\r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n    <p>{{ quest.description }}</p>\r\n  </mat-expansion-panel>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-search-bar',\r\n  templateUrl: './search-bar.component.html',\r\n  styleUrls: ['./search-bar.component.css']\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n\r\n  @Output() textChanged = new EventEmitter<string>();\r\n  serachText: string = \"\";\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onChange(event: KeyboardEvent) {\r\n    const text: string = (event.target as HTMLInputElement).value\r\n    this.serachText = text;\r\n\r\n    this.textChanged.emit(text);\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"search-box\">\r\n    <input class=\"input-box\" placeholder=\"Search country...\" (keyup)=\"onChange($event)\">\r\n    <div class=\"icon-box\">\r\n      <img style=\" width: 15px; height: 16px; margin-right: 10px;\" src=\"../../assets/search.svg\" alt=\"search-icon\">\r\n    </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-symp',\r\n  templateUrl: './symp.component.html',\r\n  styleUrls: ['./symp.component.css']\r\n})\r\nexport class SympComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h4 id=\"title\">CORONAVIRUS SYMPTOMS</h4>\r\n\r\n<div class=\"grid-container\">\r\n    <img id=\"coughimg\" src=\"../../assets/cough.png\">\r\n    <p id=\"symptext\">COUGH</p>\r\n    <img class=\"images\" src=\"../../assets/fever.png\">\r\n    <p id=\"symptext\">FEVER</p>\r\n    <img class=\"images\" src=\"../../assets/shortness-of-breath.png\">\r\n    <p id=\"symptext\">SHORTNESS OF BREATH</p>\r\n    <img class=\"images\" src=\"../../assets/difficulty-breathing.png\">\r\n    <p id=\"symptext\">DIFFICULTY BREATHING</p>\r\n</div>\r\n","export const config = {\r\n    GET_ALL_COUNTRIE_STAT_URL: \"https://thevirustracker.com/free-api?countryTotals=ALL\",\r\n};\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}